/Users/quchen/.gradle/caches/transforms-4/0a571d907bfdcc7cb9af3de8f5a79b81/transformed/runtime-release/jars/lint.jar: Warning: Library lint checks reference invalid APIs; these checks will be skipped!

Lint found an issue registry (androidx.compose.runtime.lint.RuntimeIssueRegistry)
which contains some references to invalid API:
org.jetbrains.kotlin.analysis.api.session.KtAnalysisSessionProvider: org.jetbrains.kotlin.analysis.api.lifetime.KtLifetimeTokenFactory getTokenFactory()
(Referenced from androidx/compose/runtime/lint/AutoboxingStateCreationDetector.class)

Therefore, this lint check library is not included
in analysis. This affects the following lint checks:
AutoboxingStateValueProperty
AutoboxingStateCreation
CoroutineCreationDuringComposition
FlowOperatorInvokedInComposition
ComposableLambdaParameterNaming
ComposableLambdaParameterPosition
ComposableNaming
StateFlowValueCalledInComposition
CompositionLocalNaming
MutableCollectionMutableState
ProduceStateDoesNotAssignValue
RememberReturnType
OpaqueUnitKey
UnrememberedMutableState

To use this lint check, upgrade to a more recent version
of the library. [ObsoleteLintCustomCheck]

   Explanation for issues of type "ObsoleteLintCustomCheck":
   Lint can be extended with "custom checks": additional checks implemented by
   developers and libraries to for example enforce specific API usages
   required by a library or a company coding style guideline.

   The Lint APIs are not yet stable, so these checks may either cause a
   performance degradation, or stop working, or provide wrong results.

   This warning flags custom lint checks that are found to be using obsolete
   APIs and will need to be updated to run in the current lint environment.

   It may also flag issues found to be using a newer version of the API,
   meaning that you need to use a newer version of lint (or Android Studio or
   Gradle plugin etc) to work with these checks.

/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/build.gradle.kts:15: Warning: Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details. [OldTargetApi]
        targetSdk = 35
        ~~~~~~~~~~~~~~

   Explanation for issues of type "OldTargetApi":
   When your application runs on a version of Android that is more recent than
   your targetSdkVersion specifies that it has been tested with, various
   compatibility modes kick in. This ensures that your application continues
   to work, but it may look out of place. For example, if the targetSdkVersion
   is less than 14, your app may get an option button in the UI.

   To fix this issue, set the targetSdkVersion to the highest available value.
   Then test your app to make sure everything works correctly. You may want to
   consult the compatibility notes to see what changes apply to each version
   you are adding support for:
   https://developer.android.com/reference/android/os/Build.VERSION_CODES.html
   as well as follow this guide:
   https://developer.android.com/distribute/best-practices/develop/target-sdk.
   html

   https://developer.android.com/distribute/best-practices/develop/target-sdk.html

/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/build.gradle.kts:83: Warning: A newer version of androidx.lifecycle:lifecycle-viewmodel-compose than 2.7.0 is available: 2.9.2 [GradleDependency]
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/build.gradle.kts:84: Warning: A newer version of androidx.navigation:navigation-compose than 2.7.6 is available: 2.9.3 [GradleDependency]
    implementation("androidx.navigation:navigation-compose:2.7.6")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/values/colors.xml:32: Warning: The resource R.color.purple_200 appears to be unused [UnusedResources]
    <color name="purple_200">#FFBB86FC</color>
           ~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/values/colors.xml:33: Warning: The resource R.color.purple_500 appears to be unused [UnusedResources]
    <color name="purple_500">#FF6200EE</color>
           ~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/values/colors.xml:34: Warning: The resource R.color.purple_700 appears to be unused [UnusedResources]
    <color name="purple_700">#FF3700B3</color>
           ~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/values/colors.xml:35: Warning: The resource R.color.teal_200 appears to be unused [UnusedResources]
    <color name="teal_200">#FF03DAC5</color>
           ~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/values/colors.xml:36: Warning: The resource R.color.teal_700 appears to be unused [UnusedResources]
    <color name="teal_700">#FF018786</color>
           ~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/values/colors.xml:37: Warning: The resource R.color.black appears to be unused [UnusedResources]
    <color name="black">#FF000000</color>
           ~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/values/colors.xml:38: Warning: The resource R.color.white appears to be unused [UnusedResources]
    <color name="white">#FFFFFFFF</color>
           ~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/values/strings.xml:3: Warning: The resource R.string.markdown_title appears to be unused [UnusedResources]
    <string name="markdown_title">Markdown Compose 示例</string>
            ~~~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/values/strings.xml:4: Warning: The resource R.string.sample_markdown_title appears to be unused [UnusedResources]
    <string name="sample_markdown_title">示例 Markdown 内容</string>
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/values/strings.xml:5: Warning: The resource R.string.async_render_title appears to be unused [UnusedResources]
    <string name="async_render_title">异步渲染示例</string>
            ~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/values/strings.xml:6: Warning: The resource R.string.custom_config_title appears to be unused [UnusedResources]
    <string name="custom_config_title">自定义配置示例</string>
            ~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/values/strings.xml:7: Warning: The resource R.string.performance_title appears to be unused [UnusedResources]
    <string name="performance_title">性能测试</string>
            ~~~~~~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/values/strings.xml:8: Warning: The resource R.string.render_button appears to be unused [UnusedResources]
    <string name="render_button">渲染 Markdown</string>
            ~~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/values/strings.xml:9: Warning: The resource R.string.clear_button appears to be unused [UnusedResources]
    <string name="clear_button">清除内容</string>
            ~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/values/strings.xml:10: Warning: The resource R.string.async_render_button appears to be unused [UnusedResources]
    <string name="async_render_button">异步渲染</string>
            ~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/values/strings.xml:11: Warning: The resource R.string.loading_text appears to be unused [UnusedResources]
    <string name="loading_text">正在渲染...</string>
            ~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/values/strings.xml:12: Warning: The resource R.string.error_text appears to be unused [UnusedResources]
    <string name="error_text">渲染失败</string>
            ~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/values/strings.xml:11: Warning: Replace "..." with ellipsis character (…, &#8230;) ? [TypographyEllipsis]
    <string name="loading_text">正在渲染...</string>
                                ~~~~~~~

   Explanation for issues of type "TypographyEllipsis":
   You can replace the string "..." with a dedicated ellipsis character,
   ellipsis character (u2026, &#8230;). This can help make the text more
   readable.

   https://en.wikipedia.org/wiki/Ellipsis

/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/build.gradle.kts:82: Warning: Use version catalog instead [UseTomlInstead]
    implementation("androidx.compose.material:material-icons-extended")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/build.gradle.kts:83: Warning: Use version catalog instead [UseTomlInstead]
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/build.gradle.kts:84: Warning: Use version catalog instead [UseTomlInstead]
    implementation("androidx.navigation:navigation-compose:2.7.6")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/build.gradle.kts:87: Warning: Use version catalog instead [UseTomlInstead]
    implementation("androidx.compose.ui:ui-viewbinding")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UseTomlInstead":
   If your project is using a libs.versions.toml file, you should place all
   Gradle dependencies in the TOML file. This lint check looks for version
   declarations outside of the TOML file and suggests moving them (and in the
   IDE, provides a quickfix to performing the operation automatically).

/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/menu/main_menu.xml:8: Warning: Hardcoded string "切换主题", should use @string resource [HardcodedText]
        android:title="切换主题"
        ~~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/menu/main_menu.xml:15: Warning: Hardcoded string "增大字体", should use @string resource [HardcodedText]
            android:title="增大字体"
            ~~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/menu/main_menu.xml:20: Warning: Hardcoded string "减小字体", should use @string resource [HardcodedText]
            android:title="减小字体"
            ~~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/menu/main_menu.xml:25: Warning: Hardcoded string "重置字体", should use @string resource [HardcodedText]
            android:title="重置字体"
            ~~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/menu/main_menu.xml:33: Warning: Hardcoded string "渲染慢速", should use @string resource [HardcodedText]
            android:title="渲染慢速"
            ~~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/menu/main_menu.xml:38: Warning: Hardcoded string "渲染正常", should use @string resource [HardcodedText]
            android:title="渲染正常"
            ~~~~~~~~~~~~~~~~~~~~
/Users/quchen/AndroidStudioProjects/markdownsdk/app-compose/src/main/res/menu/main_menu.xml:43: Warning: Hardcoded string "渲染快速", should use @string resource [HardcodedText]
            android:title="渲染快速"
            ~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "HardcodedText":
   Hardcoding text attributes directly in layout files is bad for several
   reasons:

   * When creating configuration variations (for example for landscape or
   portrait) you have to repeat the actual text (and keep it up to date when
   making changes)

   * The application cannot be translated to other languages by just adding
   new translations for existing string resources.

   There are quickfixes to automatically extract this hardcoded string into a
   resource lookup.

0 errors, 33 warnings
